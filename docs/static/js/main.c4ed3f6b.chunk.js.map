{"version":3,"sources":["uiapi.js","valueslider.js","search.js","checkboxes.js","radio.js","App.js","index.js"],"names":["loadData","_callee","res","json","regenerator_default","a","wrap","_context","prev","next","fetch","sent","abrupt","t0","stop","UIdata","dataset","obj","objKeys","reduce","acc","item","set","Set","_i","_Object$entries","Object","entries","length","_ref3","_ref2","slicedToArray","key","add","toConsumableArray","keysDetails","object","detail","details","map","arrayElement","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","Symbol","iterator","done","value","err","return","filter","Map","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_step2","_iterator2","itemDetails","createMetaDataTemplate","useStyles","makeStyles","root","width","marginRight","valuetext","concat","RangeSlider","props","classes","values","max","Math","apply","min","_React$useState","React","useState","_React$useState2","setValue","react_default","createElement","className","FormLabel","component","name","charAt","toUpperCase","slice","Typography","id","gutterBottom","Slider","onChange","event","newValue","changed","valueLabelDisplay","aria-labelledby","getAriaValueText","theme","container","display","flexWrap","textField","dense","marginTop","menu","TextFields","noValidate","autoComplete","TextField","label","keyLabel","type","margin","FormControlLabelPosition","FormControl","category","FormGroup","aria-label","row","FormControlLabel","JSON","stringify","control","Checkbox","color","labelPlacement","RadioButtons","useStateFilter","categories","RadioGroup","target","Radio","Checkboxes","checkBoxes","_ref","core_browser_esm","checkboxes","Objects","objects","_ref4","IDs","ID","_ref5","_ref6","Values","_ref7","_ref8","DetailLists","detailMap","_ref9","_ref10","_ref11","_ref12","_ref13","_ref14","_ref15","_ref16","ChartRadios","keys","options","filterCheckbox","PieChart","mappedUI","dataArray","mappedDetails","devices","device","_loop","_arr","push","toFixed","det","index_esm","chartType","data","title","pieHole","slices","legend","position","alignment","textStyle","fontSize","tooltip","showColorCode","chartArea","left","top","height","fontName","graph_id","legend_toggle","DataOutput","checkedCats","_i2","_ref19","_ref18","size","span","cat","colSpan","console","log","UserInterface","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","chartImageURI","filterChartCheckboxes","bind","assertThisInitialized","filteredDataset","InterfaceData","setFilterOptions","reduceFiltVals","filtered","_i3","_Object$values","_i4","_Object$keys","_this$state$options$k","has","_loop2","i","includes","forEach","setState","e","checked","checkbox","search","parse","optionCategory","delete","objectSpread","defineProperty","get","targetName","toString","targetNameArray","val","_iteratorNormalCompletion3","_didIteratorError3","_iteratorError3","_step3","_iterator3","array","_iteratorNormalCompletion4","_didIteratorError4","_iteratorError4","_step4","_iterator4","curr","allDevices","style","fontWeight","Component","App","App_UserInterface","ReactDOM","render","Fragment","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.c4ed3f6b.chunk.js","sourcesContent":["async function loadData() {\n  try {\n    const res = await fetch(\"./dataset.json\");\n    const json = await res.json();\n    return json;\n  } catch (err) {\n    throw err;\n  }\n}\n\nfunction UIdata(dataset) {\n  // FUNCTION THAT DOES ALL THE WORK\n  function createMetaDataTemplate(obj) {\n    // console.clear();\n    const reducedKeys = (acc, item) => {\n      let set = new Set(acc);\n      for (const [key, value] of Object.entries(item)) {\n        //JULY 26 2019 -- this if statement is temporary\n        if (typeof value !== \"object\") {\n          set.add(key);\n        }\n      }\n      return [...set];\n    };\n\n    const objKeys = obj.reduce(reducedKeys, []);\n\n    const keysDetails = (object, detail) => {\n      let details = object.map(arrayElement => {\n        return arrayElement[detail];\n      });\n      let set = new Set();\n      for (detail of details) {\n        set.add(detail);\n      }\n      const filterSet = [...set].filter(item => item !== undefined);\n      const mappedSet = filterSet.map(item => {\n        //EXPERIMENTAL CODE FOR NESTED OBJECTS\n        if (typeof item === \"object\") {\n          // return createMetaDataTemplate(item);\n          // return JSON.stringify(item);\n          return item;\n        }\n        //END OF EXPERIEMENTAL CODE\n        return item;\n      });\n      return mappedSet;\n    };\n    //Map version of itemDetails\n    const itemDetails = details => {\n      let map = new Map();\n      for (const detail of details) {\n        map.set(detail, keysDetails(obj, detail));\n      }\n      return map;\n    };\n    return itemDetails(objKeys);\n  }\n\n  // OPTIONAL: for truncated output meant for UI\n\n  function simplifiedOutput(mappedObject, length) {\n    const map1 = new Map();\n    const mapped = [...mappedObject.values()]\n      .filter(item => item.length < length)\n      .map(detail => {\n        const map2 = new Map();\n        return map2.set(\n          [...mappedObject.keys()].filter(key =>\n            mappedObject.get(key).includes(detail[0])\n          ),\n          detail\n        );\n      });\n    for (const item of mapped) {\n      for (const key of item.keys()) {\n        map1.set(...key, ...item.values());\n      }\n    }\n    return map1;\n  }\n\n  return createMetaDataTemplate(dataset);\n}\n\nexport { loadData, UIdata };\n","import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Slider from \"@material-ui/core/Slider\";\r\nimport { inherits } from \"util\";\r\nimport FormLabel from \"@material-ui/core/FormLabel\";\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    width: \"inherit\",\r\n    marginRight: \"40px\"\r\n  }\r\n});\r\n\r\nfunction valuetext(value) {\r\n  return `$${value}`;\r\n}\r\n\r\nexport default function RangeSlider(props) {\r\n  const classes = useStyles();\r\n  const values = props.values[0][1];\r\n  const max = Math.max(...values);\r\n  const min = Math.min(...values);\r\n  const [value, setValue] = React.useState([min, max]);\r\n\r\n  const handleChange = (event, newValue) => {\r\n    setValue(newValue);\r\n    return props.changed(newValue, props.name);\r\n  };\r\n  return (\r\n    <div className={classes.root}>\r\n      {/* {props.name.charAt(0).toUpperCase() + props.name.slice(1)} */}\r\n      <FormLabel component=\"legend\">\r\n        {props.name.length > 2\r\n          ? props.name.charAt(0).toUpperCase() + props.name.slice(1)\r\n          : props.name.charAt(0).toUpperCase() +\r\n            props.name.charAt(1).toUpperCase()}\r\n      </FormLabel>\r\n      <Typography id=\"range-slider\" gutterBottom />\r\n      <Slider\r\n        value={value}\r\n        onChange={handleChange}\r\n        min={Math.min(...values)}\r\n        max={Math.max(...values)}\r\n        valueLabelDisplay=\"auto\"\r\n        aria-labelledby=\"range-slider\"\r\n        getAriaValueText={valuetext}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport TextField from \"@material-ui/core/TextField\";\nimport FormLabel from \"@material-ui/core/FormLabel\";\n\nconst useStyles = makeStyles(theme => ({\n  container: {\n    display: \"block\",\n    flexWrap: \"wrap\"\n  },\n  textField: {\n    // marginLeft: theme.spacing(1),\n    // marginRight: theme.spacing(1),\n    // width: 200,\n  },\n  dense: {\n    marginTop: 19\n  },\n  menu: {\n    width: 200\n  }\n}));\n\nexport default function TextFields(props) {\n  const classes = useStyles();\n  return (\n    <form className={classes.container} noValidate autoComplete=\"off\">\n      {/* <FormLabel component=\"legend\">\n        {props.keyLabel.length > 2 \n          ? props.keyLabel.charAt(0).toUpperCase() +\n            props.keyLabel.slice(1) +\n            's'\n          : props.keyLabel.charAt(0).toUpperCase() +\n            props.keyLabel.charAt(1).toUpperCase()}\n      </FormLabel> */}\n      <TextField\n        id=\"standard-search\"\n        label={\n          \"Search \" + props.keyLabel.length > 2\n            ? props.keyLabel.charAt(0).toUpperCase() +\n              props.keyLabel.slice(1) +\n              \"s\"\n            : \"Search \" +\n              props.keyLabel.charAt(0).toUpperCase() +\n              props.keyLabel.charAt(1).toUpperCase() +\n              \"s\"\n        }\n        type=\"search\"\n        className={classes.textField}\n        margin=\"normal\"\n        onChange={props.onChange}\n        name={props.name}\n      />\n    </form>\n  );\n}\n","import React from \"react\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport FormGroup from \"@material-ui/core/FormGroup\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport FormLabel from \"@material-ui/core/FormLabel\";\n\nfunction FormControlLabelPosition(props) {\n  // const [value, setValue] = React.useState(\"female\");\n\n  // function handleChange(event) {\n  //   // setValue(event.target.value);\n  // }\n  return (\n    <FormControl component=\"fieldset\">\n      <FormLabel component=\"legend\">\n        {props.category.length > 2\n          ? props.category.charAt(0).toUpperCase() + props.category.slice(1)\n          : props.category.charAt(0).toUpperCase() +\n            props.category.charAt(1).toUpperCase()}\n      </FormLabel>\n      {props.details.map(detail => {\n        return (\n          <FormGroup\n            aria-label=\"position\"\n            name=\"position\"\n            key={detail}\n            value={props.category}\n            onChange={props.onChange}\n            row\n          >\n            <FormControlLabel\n              value={JSON.stringify({\n                category: props.category,\n                value: detail\n              })}\n              control={<Checkbox color=\"primary\" />}\n              label={\n                // detail.length > 2\n                //   ? detail.charAt(0).toUpperCase() + detail.slice(1)\n                //   : detail.charAt(0).toUpperCase() +\n                //     detail.charAt(1).toUpperCase()\n                detail\n              }\n              labelPlacement=\"end\"\n            />\n          </FormGroup>\n        );\n      })}\n    </FormControl>\n  );\n}\n\nexport default FormControlLabelPosition;\n","import React from \"react\";\nimport Radio from \"@material-ui/core/Radio\";\nimport RadioGroup from \"@material-ui/core/RadioGroup\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport FormLabel from \"@material-ui/core/FormLabel\";\n\nexport default function RadioButtons(props) {\n  // const [value, setValue] = React.useState(\"color\");\n\n  const useStateFilter = props.categories.filter(\n    category => category !== \"id\" || category !== \"name\"\n  );\n  const [value, setValue] = React.useState(useStateFilter[0]);\n\n  function handleChange(event) {\n    setValue(event.target.value);\n    return props.onChange(event.target.value);\n  }\n\n  return (\n    <FormControl component=\"fieldset\">\n      {/* <FormLabel component=\"legend\">labelPlacement</FormLabel> */}\n      <RadioGroup\n        aria-label=\"position\"\n        name=\"position\"\n        value={value}\n        onChange={handleChange}\n        row\n      >\n        {props.categories.map(category => {\n          if (category !== \"id\") {\n            return (\n              <FormControlLabel\n                value={category}\n                control={<Radio color=\"primary\" />}\n                key={category}\n                label={\n                  category.length > 2\n                    ? category.charAt(0).toUpperCase() + category.slice(1)\n                    : category.charAt(0).toUpperCase() +\n                      category.charAt(1).toUpperCase()\n                }\n                labelPlacement=\"end\"\n              />\n            );\n          }\n          return false;\n        })}\n      </RadioGroup>\n    </FormControl>\n  );\n}\n","/** @jsx jsx */ // emotion <----THIS IS A PRAGMA\n\nimport React from \"react\";\nimport \"./App.css\";\nimport { loadData, UIdata } from \"./uiapi\";\nimport { css, jsx } from \"@emotion/core\"; // emotion\nimport RangeSlider from \"./valueslider\";\nimport Chart from \"react-google-charts\";\nimport TextFields from \"./search\";\nimport FormControlLabelPosition from \"./checkboxes\";\nimport RadioButtons from \"./radio\";\n\nfunction Checkboxes(props) {\n  return [...props.checkBoxes].map(([key, value]) => {\n    return (\n      <ul key={key}>\n        <FormControlLabelPosition\n          category={key}\n          details={value}\n          onChange={props.onChange}\n        />\n      </ul>\n    );\n  });\n}\nfunction Objects(props) {\n  return [...props.objects].map(([key, value]) => {\n    return (\n      <ul key={key}>\n        <h2>\n          {key.length > 2\n            ? key.charAt(0).toUpperCase() + key.slice(1)\n            : key.charAt(0).toUpperCase() + key.charAt(1).toUpperCase()}\n        </h2>\n        <RangeSlider changed={props.onChange} name=\"objDetails\" />\n      </ul>\n    );\n  });\n}\n\nfunction IDs(props) {\n  return [...props.ID].map(([key, value]) => {\n    return (\n      <ul key={key}>\n        <TextFields onChange={props.onChange} name={key} keyLabel={key} />\n      </ul>\n    );\n  });\n}\n\nfunction Values(props) {\n  return [...props.values].map(([key, value]) => {\n    return (\n      <ul key={key}>\n        <RangeSlider\n          changed={props.onChange}\n          values={props.values}\n          name=\"value\"\n        />\n      </ul>\n    );\n  });\n}\n\nfunction DetailLists(props) {\n  const checkBoxes = [...props.detailMap.entries()].filter(([key, value]) => {\n    return value.length < 10;\n  });\n\n  const objects = [...props.detailMap.entries()].filter(([key, value]) => {\n    return typeof value[0] === \"object\";\n  });\n\n  const ID = [...props.detailMap.entries()].filter(([key, value]) => {\n    return key === \"id\" || key === \"ID\" || key === \"name\" || key === \"Name\";\n  });\n\n  const values = [...props.detailMap.entries()].filter(([key, value]) => {\n    return key === \"value\" || value === \"price\";\n  });\n\n  return (\n    <div>\n      <IDs detailMap={props.detailMap} onChange={props.onChange} ID={ID} />\n      <Values\n        detailMap={props.detailMap}\n        onChange={props.onChange}\n        values={values}\n      />\n      <Checkboxes\n        detailMap={props.detailMap}\n        onChange={props.onChange}\n        checkBoxes={checkBoxes}\n      />\n      <Objects\n        detailMap={props.detailMap}\n        onChange={props.onChange}\n        objects={objects}\n      />\n    </div>\n  );\n}\n\nfunction ChartRadios(props) {\n  if (Object.keys(props.options).length > 0) {\n    const keys = Object.keys(props.options);\n    return (\n      <RadioButtons\n        onChange={props.filterCheckbox}\n        categories={keys}\n        name=\"category\"\n      />\n    );\n  }\n  return false;\n}\n\nfunction PieChart(props) {\n  // console.log('e', e.target)\n\n  const keys = [...props.mappedUI.keys()];\n\n  const dataArray = [\n    [props.category ? props.category : `${keys[0]}`, \"percentage\"]\n  ];\n\n  // let devices;\n\n  // if (props.devices.length === 0) {\n  //   devices = props.allDevices;\n  // } else devices = props.devices\n\n  const mappedDetails = props.devices.map(\n    device => device[props.category ? props.category : keys[0]]\n  );\n  const set = new Set();\n  for (const detail of mappedDetails) {\n    set.add(detail);\n  }\n  for (const detail of [...set]) {\n    dataArray.push([\n      `${\n        typeof detail === \"string\"\n          ? detail.charAt(0).toUpperCase() + detail.slice(1)\n          : `$${detail.toFixed(2)}`\n      }`,\n      mappedDetails.filter(det => det === detail).length\n    ]);\n  }\n\n  const pieOptions = {\n    title: \"\",\n    // pieSliceText: \"label\",\n    pieHole: 1,\n    slices: [\n      {\n        color: \"#2BB673\"\n      },\n      {\n        color: \"#d91e48\"\n      },\n      {\n        color: \"#007fad\"\n      },\n      {\n        color: \"#e9a227\"\n      }\n    ],\n    legend: {\n      position: \"bottom\",\n      alignment: \"center\",\n      textStyle: {\n        color: \"233238\",\n        fontSize: 14\n      }\n    },\n    // legend: 'none',\n    tooltip: {\n      showColorCode: true\n    },\n    chartArea: {\n      left: 0,\n      top: 0,\n      width: \"100%\",\n      height: \"80%\"\n    },\n    fontName: \"Roboto\"\n  };\n  return (\n    <div className=\"App\">\n      <Chart\n        chartType=\"PieChart\"\n        data={dataArray}\n        options={pieOptions}\n        graph_id=\"PieChart\"\n        width={\"100%\"}\n        height={\"400px\"}\n        legend_toggle\n      />\n    </div>\n  );\n}\n\nfunction DataOutput(props) {\n  const checkedCats = [];\n  for (const [key, set] of Object.entries(props.options)) {\n    if (set.size > 0) {\n      checkedCats.push(key);\n    }\n  }\n  if (Object.keys(props.options).length && props.devices.length > 0) {\n    const categories = Object.keys(props.options);\n    return (\n      <table id=\"items\">\n        <colgroup span={Object.keys(props.options).length} />\n        <tbody>\n          <tr>\n            {categories.map(cat => {\n              return (\n                <th key={cat} className=\"categories\" colSpan=\"1\">\n                  {cat.length > 2\n                    ? cat.charAt(0).toUpperCase() + cat.slice(1)\n                    : cat.charAt(0).toUpperCase() + cat.charAt(1).toUpperCase()}\n                </th>\n              );\n            })}\n          </tr>\n        </tbody>\n\n        {props.devices.map(device => {\n          return (\n            <tbody>\n              <tr>\n                {categories.map(category => {\n                  return (\n                    <td key={category}>\n                      {/* {typeof device[category] !== \"object\"\n                      ? device[category]\n                      : \"\"} */}\n                      {category === \"value\" || category === \"price\"\n                        ? \"$\" + device[category].toFixed(2)\n                        : device[category]}\n                    </td>\n                  );\n                })}\n              </tr>\n            </tbody>\n          );\n        })}\n      </table>\n    );\n  } else console.log(\"Nothing to output. This is the first render\");\n\n  return props.devices;\n}\n\nclass UserInterface extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      dataset: [],\n      mappedUI: new Map(),\n      options: {},\n      chartImageURI: \"\",\n      categories: null\n    };\n    this.filterChartCheckboxes = this.filterChartCheckboxes.bind(this);\n    this.filteredDataset = this.filteredDataset.bind(this);\n    this.InterfaceData = this.InterfaceData.bind(this);\n    this.setFilterOptions = this.setFilterOptions.bind(this);\n    this.reduceFiltVals = this.reduceFiltVals.bind(this);\n  }\n\n  componentDidMount() {\n    this.InterfaceData();\n  }\n\n  filteredDataset() {\n    let filtered = [...this.state.dataset];\n    const details = [];\n    const categories = [];\n\n    for (const value of Object.values(this.state.options)) {\n      if (value.size > 0) {\n        details.push([...value.values()]);\n        for (const key of Object.keys(this.state.options)) {\n          if (this.state.options[key].has(...[...value.values()])) {\n            categories.push(key);\n          }\n        }\n      }\n    }\n\n    for (let i = 0; i < categories.length; i++) {\n      filtered = filtered.filter(device => {\n        return details[i].includes(device[categories[i]]);\n      });\n    }\n\n    // return categories.length > 0 ? filtered : [];\n    return filtered;\n  }\n\n  async InterfaceData() {\n    const dataset = await loadData();\n    const mappedUI = UIdata(dataset);\n    const options = {};\n    [...mappedUI.keys()].forEach(category => (options[category] = new Set()));\n    this.setState({\n      dataset,\n      mappedUI,\n      options\n    });\n  }\n\n  filterChartCheckboxes(e) {\n    this.setState({\n      categories: e\n    });\n  }\n\n  setFilterOptions(detail, name) {\n    if (detail.target) {\n      const checked = detail.target.checked;\n      const checkbox = detail.target.type === \"checkbox\";\n      const search = detail.target.type === \"search\";\n      // const range = detail.target.type === \"range\";\n\n      if (checkbox) {\n        const json = JSON.parse(detail.target.value);\n        const category = json.category;\n        const value = json.value;\n        const optionCategory = new Set([...this.state.options[category]]);\n        if (checked) optionCategory.add(value);\n        else optionCategory.delete(value);\n        this.setState({\n          options: {\n            ...this.state.options,\n            [category]: optionCategory\n          }\n        });\n      }\n\n      if (search) {\n        const value = detail.target.value;\n        const category = detail.target.name;\n        const optionCategory = new Set();\n        // NOTE TO SELF: Logic could be expanded to eventually search for any item\n        if (value.length > 0) {\n          const targetNameArray = this.state.mappedUI.get(category);\n          const filtered = targetNameArray.filter(targetName => {\n            return targetName.toString().includes(value);\n          });\n\n          for (const targetName of filtered) {\n            optionCategory.add(targetName);\n          }\n\n          this.setState({\n            options: {\n              ...this.state.options,\n              [category]: optionCategory\n            }\n          });\n        } else\n          this.setState({\n            options: {\n              ...this.state.options,\n              [category]: optionCategory\n            }\n          });\n      }\n    } else {\n      const value = detail;\n      const category = name;\n      const optionCategory = new Set();\n      const targetNameArray = this.state.mappedUI.get(category);\n\n      if (typeof targetNameArray[0] !== \"object\") {\n        const filtered = targetNameArray.filter(\n          val => val >= value[0] && val <= value[1]\n        );\n        for (const val of filtered) {\n          optionCategory.add(val);\n        }\n        this.setState({\n          options: {\n            ...this.state.options,\n            [category]: optionCategory\n          }\n        });\n      } else {\n        // const mapped = UIdata(targetNameArray);\n        // const measurements = [...mapped.keys()];\n        // // console.log(measurements);\n        // // console.log(mapped.get(\"height\"));\n        // const units = (acc, curr) => {\n        //   let set = new Set(acc);\n        //   let map = new Map();\n        //   for (const obj of mapped.get(\"height\")) {\n        //     if (obj.unit === \"in\") set.add(obj.value);\n        //   }\n        //   map.set(\"in\", [...set]);\n        //   // console.log(map);\n        //   return [...set];\n        // };\n        // // console.log(units());\n        // const filtered = units().filter(val => val > value);\n        // console.log(filtered);\n        // for (const val of filtered) {\n        //   optionCategory.add(val);\n        // }\n        // this.setState({\n        //   options: {\n        //     ...this.state.options,\n        //     [category]: optionCategory\n        //   }\n        // });\n        // // console.log([...mapped.values()]);\n      }\n    }\n  }\n  reduceFiltVals(array) {\n    const values = [];\n    for (const device of array) {\n      values.push(device.value);\n    }\n    return values.reduce((acc, curr) => acc + curr, 0);\n  }\n  render() {\n    return (\n      <div id=\"parent\">\n        <div id=\"sideMenu\">\n          {/* <h3>\n            There are {this.state.dataset.length} devices in inventory. Narrow\n            your search below.\n          </h3> */}\n          <DetailLists\n            detailMap={this.state.mappedUI}\n            onChange={this.setFilterOptions}\n          />\n        </div>\n        <div id=\"content\">\n          <ul>\n            <ChartRadios\n              options={this.state.options}\n              filterCheckbox={this.filterChartCheckboxes}\n              devices={this.filteredDataset()}\n            />\n            <PieChart\n              devices={this.filteredDataset()}\n              mappedUI={this.state.mappedUI}\n              options={this.state.options}\n              category={this.state.categories}\n              allDevices={this.state.dataset}\n            />\n            <h4>\n              You are currently displaying{\" \"}\n              {this.filteredDataset().length === this.state.dataset.length\n                ? \"all \" + this.filteredDataset().length\n                : this.filteredDataset().length}{\" \"}\n              item\n              {this.filteredDataset().length === 1 ? \"\" : \"s\"} from inventory,\n              totalling{\" \"}\n              <span style={{ fontWeight: \"bold\" }}>\n                ${this.reduceFiltVals(this.filteredDataset()).toFixed(2)}\n              </span>\n            </h4>\n\n            <DataOutput\n              devices={this.filteredDataset()}\n              mappedUI={this.state.mappedUI}\n              options={this.state.options}\n            />\n          </ul>\n        </div>\n      </div>\n    );\n  }\n}\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <UserInterface />\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.Fragment>\n    <App />\n  </React.Fragment>,\n  document.getElementById(\"samsApp\")\n);\n"],"sourceRoot":""}